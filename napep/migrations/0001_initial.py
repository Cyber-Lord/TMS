# Generated by Django 2.1.5 on 2019-05-07 21:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254)),
                ('phoneNumber', models.CharField(max_length=15)),
                ('contact_address', models.CharField(max_length=200)),
                ('dob', models.DateField(blank=True, null=True)),
                ('dp', models.ImageField(upload_to='dp/')),
                ('is_state', models.BooleanField(default=False)),
                ('is_bir', models.BooleanField(default=False)),
                ('is_ministry', models.BooleanField(default=False)),
                ('is_lga', models.BooleanField(default=False)),
                ('state_origin', models.CharField(max_length=50)),
                ('lga_origin', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=6)),
                ('occupation', models.CharField(max_length=100)),
                ('group', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=50)),
                ('group_code', models.CharField(max_length=50)),
                ('office', models.CharField(max_length=50)),
                ('contact_number', models.CharField(max_length=15)),
                ('contact_mail', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='OwnerNOK',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fName', models.CharField(max_length=30)),
                ('lName', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=200)),
                ('relationship', models.CharField(choices=[('Brother', 'Brother'), ('Sister', 'Sister'), ('Parent', 'Parent'), ('Wife', 'Wife'), ('Daughter', 'Daughter'), ('Son', 'Son'), ('Relative', 'Relative')], max_length=20)),
                ('phoneNumber', models.CharField(blank=True, max_length=15, null=True)),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Rider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fName', models.CharField(max_length=30)),
                ('lName', models.CharField(max_length=30)),
                ('oName', models.CharField(max_length=30)),
                ('contactAddress', models.CharField(max_length=200)),
                ('state_origin', models.CharField(max_length=30)),
                ('lga_origin', models.CharField(max_length=30)),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=6)),
                ('passport', models.ImageField(upload_to='passports/')),
                ('phoneNumber', models.CharField(max_length=15)),
                ('occupation', models.CharField(max_length=100)),
                ('union_id_number', models.CharField(max_length=10)),
                ('iceName', models.CharField(max_length=30)),
                ('iceNumber', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='RidersSuretyDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=200)),
                ('relationship', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Tricycle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate_number', models.CharField(max_length=9)),
                ('reg_number', models.CharField(max_length=15, unique=True)),
                ('dealer_name', models.CharField(max_length=100)),
                ('receipt_issuance_day', models.DateField()),
                ('dealer_phone', models.CharField(max_length=15)),
                ('chasis_number', models.CharField(max_length=30)),
                ('dealer_receipt_number', models.CharField(max_length=15)),
                ('status', models.CharField(choices=[('OLD', 'OLD'), ('NEW', 'NEW')], max_length=30)),
                ('engine_number', models.CharField(max_length=200)),
                ('date_acquired', models.DateField(blank=True, null=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='napep.Group')),
                ('maker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='napep.Brand')),
            ],
        ),
        migrations.CreateModel(
            name='TricycleOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nok', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='napep.OwnerNOK')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='tricycle',
            name='owned_by_driver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='napep.TricycleOwner'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
